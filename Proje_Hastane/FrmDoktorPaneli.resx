<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>